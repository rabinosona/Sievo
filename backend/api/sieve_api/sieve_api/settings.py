"""
Django settings for sieve_api project.

Generated by 'django-admin startproject' using Django 4.2.16.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import environ
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
environ.Env.read_env(env_file=os.path.join(BASE_DIR, ".env"))

env = environ.Env(
  # set casting, default value
  DEBUG=(bool, False)
)

SECRET_KEY = env('SECRET_KEY')
OPEN_API_KEY = env('OPENAI_API_KEY')
DEBUG = env("DEBUG")


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: don't run with debug turned on in production!
env = environ.Env(
  # set casting, default value
  DEBUG=(bool, False)
)

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'sieve_api',
    'django.contrib.admin',
    'corsheaders',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

CORS_ALLOWED_ORIGINS = [
    'http://localhost:3000',  # React app origin
     'http://localhost:5173',
]

ROOT_URLCONF = 'sieve_api.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'sieve_api.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

MEDIA_URL = '/media/'
MEDIA_ROOT = '/Users/rabinosona/Documents/sieve_code/backend/api/sieve_api/files'

# Prompt Settings

MASTER_PROMPT = 'This engineer is applying for a backend engineer position. Please, evaluate his responses to the following questions, and let me know if he\'s a good candidate.'

CONVERSATION = [ 'Let\'s say that you would like to build a backend service, integrating it with the rest of the ecosystem. How would you do that, and what tools would you use?',
                'OK. Now let\'s assume that your backend service should be deployed to half of the machines first, what\'s the best way to achieve this?',
                'Sometimes, your service might go down. What would you do to ensure that the incoming requests will be logged/sent again after the service goes up?',
                'It\'s expected that your load will suddenly increase from 10K users per day to 5M. How would you handle this spike?', 
                ' The final question. Your service is up and running, it scales well, but you don\'t know what\'s the best way to store your data. What DB would you use and do you think that it\'s a good idea to share one DB instance across multiple services? If yes, why?',
                'GOODBYE' ]